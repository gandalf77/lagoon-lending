import * as btc from '@scure/btc-signer';
import { UtxoWithTx } from '../api';
import { BitcoinNetwork } from '../constants';
import { SpendableByScriptTypes } from '../utils';
export declare function sbtcWithdrawHelper({ network, amountSats, signature, fulfillmentFeeSats, bitcoinAddress, bitcoinChangeAddress, pegAddress, feeRate, utxos, utxoToSpendable, paymentPublicKey, }: {
    network?: BitcoinNetwork;
    amountSats: number;
    signature: string;
    fulfillmentFeeSats: number;
    bitcoinAddress: string;
    bitcoinChangeAddress: string;
    pegAddress?: string;
    feeRate: number;
    utxos: UtxoWithTx[];
    utxoToSpendable?: Partial<SpendableByScriptTypes>;
    paymentPublicKey?: string;
}): Promise<btc.Transaction>;
export declare const buildSbtcWithdrawTx: typeof buildSbtcWithdrawTxOpReturn;
export declare function buildSbtcWithdrawTxOpReturn({ network, amountSats, signature, bitcoinAddress, }: {
    network?: BitcoinNetwork;
    amountSats: number;
    signature: string;
    bitcoinAddress: string;
}): btc.Transaction;
export declare function buildSBtcWithdrawBtcPayload({ network, amountSats, signature, }: {
    network?: BitcoinNetwork;
    amountSats: number;
    signature: string;
}): Uint8Array;
export declare function sbtcWithdrawMessage({ network, amountSats, bitcoinAddress, }: {
    network?: BitcoinNetwork;
    amountSats: number;
    bitcoinAddress: string;
}): string;
