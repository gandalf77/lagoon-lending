"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VSIZE_INPUT_P2WPKH = exports.OVERHEAD_TX = exports.REGTEST = exports.TESTNET = exports.MAINNET = exports.OpCode = exports.MagicBytes = exports.SBTC_FT_ADDRESS_DEVENV = exports.SBTC_FT_ADDRESS_TESTNET = exports.SBTC_PEG_ADDRESS_DEVENV = exports.SBTC_PEG_ADDRESS_TESTNET = void 0;
const btc = __importStar(require("@scure/btc-signer"));
exports.SBTC_PEG_ADDRESS_TESTNET = '--TODO--';
exports.SBTC_PEG_ADDRESS_DEVENV = 'bcrt1pte5zmd7qzj4hdu45lh9mmdm0nwq3z35pwnxmzkwld6y0a8g83nnqhj6vc0';
exports.SBTC_FT_ADDRESS_TESTNET = 'ST3ACFZ2XKFPKAFD9YY92ZP0Y4QN6MTX3H20C27NY.asset';
exports.SBTC_FT_ADDRESS_DEVENV = 'ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.asset';
var MagicBytes;
(function (MagicBytes) {
    MagicBytes["Mainnet"] = "X2";
    MagicBytes["Testnet"] = "T2";
    MagicBytes["Regtest"] = "id";
})(MagicBytes || (exports.MagicBytes = MagicBytes = {}));
var OpCode;
(function (OpCode) {
    OpCode["PegIn"] = "3C";
    OpCode["PegOut"] = "3E";
})(OpCode || (exports.OpCode = OpCode = {}));
exports.MAINNET = {
    ...btc.NETWORK,
    bip32: {
        public: 0x0488b21e,
        private: 0x0488ade4,
    },
    bip84: {
        coin: 0,
    },
    magicBytes: MagicBytes.Mainnet,
};
exports.TESTNET = {
    ...btc.TEST_NETWORK,
    bip32: {
        public: 0x043587cf,
        private: 0x04358394,
    },
    bip84: {
        coin: 1,
    },
    magicBytes: MagicBytes.Testnet,
};
exports.REGTEST = {
    ...exports.TESTNET,
    bech32: 'bcrt',
    magicBytes: MagicBytes.Regtest,
};
exports.OVERHEAD_TX = 4 + 1 + 1 + 4;
exports.VSIZE_INPUT_P2WPKH = 68;
//# sourceMappingURL=constants.js.map